import{r,j as t}from"./index-CZSIoD7d.js";const n="app-theme",c=r.createContext({theme:window.localStorage.getItem(n)==="dark"?"dark":"light",setTheme:e=>{console.log(`current theme is ${e}`)}}),d=({children:e})=>{const[s,o]=r.useState(window.localStorage.getItem(n)==="dark"?"dark":"light"),h=r.useCallback(a=>{o(a),a==="dark"?window.localStorage.setItem(n,"dark"):window.localStorage.removeItem(n)},[o]);return t.jsx(c,{value:{theme:s,setTheme:h},children:e})},i=()=>{const e=r.useContext(c);if(!e)throw new Error("useTheme must be used within a ThemeContextProvider");return e},m=()=>{const{theme:e,setTheme:s}=i();return r.useEffect(()=>{e==="dark"?window.document.body.classList.add("dark"):window.document.body.classList.remove("dark")},[e]),t.jsx("div",{className:"theme-switcher",children:t.jsxs("label",{children:[t.jsx("input",{type:"checkbox",name:"theme-switcher",checked:e==="dark",onChange:o=>{o.target.checked?s("dark"):s("light")}}),t.jsxs("span",{children:["Currently applied theme is: ",e]})]})})},u=()=>t.jsxs(d,{children:[t.jsx("h1",{children:"Theme Switcher"}),t.jsx(m,{})]});export{u as default};
